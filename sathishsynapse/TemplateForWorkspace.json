{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "sathishsynapse"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"sathishsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sathishsynapse-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:sathishsynapse.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sathishstoragesftp.dfs.core.windows.net/"
		},
		"sathishsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sathishstoragesftp.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['firstName']"
										},
										"sink": {
											"name": "firstName"
										}
									},
									{
										"source": {
											"path": "$['lastName']"
										},
										"sink": {
											"name": "lastName"
										}
									},
									{
										"source": {
											"path": "$['gender']"
										},
										"sink": {
											"name": "gender"
										}
									},
									{
										"source": {
											"path": "$['age']"
										},
										"sink": {
											"name": "age"
										}
									},
									{
										"source": {
											"path": "$['address']['streetAddress']"
										},
										"sink": {
											"name": "streetAddress"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city"
										}
									},
									{
										"source": {
											"path": "$['address']['state']"
										},
										"sink": {
											"name": "state"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['number']"
										},
										"sink": {
											"name": "number"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Json2')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['firstName']"
										},
										"sink": {
											"name": "firstName"
										}
									},
									{
										"source": {
											"path": "$['lastName']"
										},
										"sink": {
											"name": "lastName"
										}
									},
									{
										"source": {
											"path": "$['gender']"
										},
										"sink": {
											"name": "gender"
										}
									},
									{
										"source": {
											"path": "$['age']"
										},
										"sink": {
											"name": "age"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['address']['streetAddress']"
										},
										"sink": {
											"name": "streetAddress"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city"
										}
									},
									{
										"source": {
											"path": "$['address']['state']"
										},
										"sink": {
											"name": "state"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['number']"
										},
										"sink": {
											"name": "number"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Json3')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 3')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sathishsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sathishsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sample2.json",
						"fileSystem": "inputfiles"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sample3.json",
						"fileSystem": "inputfiles"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"Date": {
							"type": "string"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "firstName",
						"type": "UTF8"
					},
					{
						"name": "lastName",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "age",
						"type": "INT64"
					},
					{
						"name": "streetAddress",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "number",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "firstName",
						"type": "UTF8"
					},
					{
						"name": "lastName",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "age",
						"type": "INT64"
					},
					{
						"name": "streetAddress",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "number",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLDEST')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "output"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Auhthor_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Edition",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblBooks"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sathishsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sathishsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sathishsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sathishsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Sno as string,",
						"          currency as string,",
						"          test as string,",
						"          test2 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'Database1',",
						"     tableName: 'Currency') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow2')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json3",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          firstName as string,",
						"          lastName as string,",
						"          gender as string,",
						"          age as integer,",
						"          Date as string,",
						"          address as (streetAddress as string, city as string, state as string),",
						"          phoneNumbers as (type as string, number as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments') ~> source1",
						"source1 derive(derviedTS = toTimestamp(toLong(substring(Date,1,13)))) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          firstName as string,",
						"          lastName as string,",
						"          gender as string,",
						"          age as long,",
						"          streetAddress as string,",
						"          city as string,",
						"          state as string,",
						"          type as string,",
						"          number as string",
						"     ),",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Json3')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow3')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDEST",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivot1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as integer,",
						"          Auhthor_id as integer,",
						"          Price as integer,",
						"          Edition as integer,",
						"          Year as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 pivot(groupBy(Year),",
						"     pivotBy(Auhthor_id),",
						"     Avg = sum(Price),",
						"     columnNaming: '$N$V',",
						"     lateral: false) ~> pivot1",
						"pivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Source')]",
				"[concat(variables('workspaceId'), '/datasets/SQLDEST')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow3_copy1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDEST",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivot1"
						},
						{
							"name": "MapDrifted1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as integer,",
						"          Auhthor_id as integer,",
						"          Price as integer,",
						"          Edition as integer,",
						"          Year as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 pivot(groupBy(Year),",
						"     pivotBy(Edition),",
						"     Avg = sum(Price),",
						"     columnNaming: '$N$V',",
						"     lateral: false) ~> pivot1",
						"pivot1 derive(Year = Year) ~> MapDrifted1",
						"pivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Source')]",
				"[concat(variables('workspaceId'), '/datasets/SQLDEST')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Database1')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Database1",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true,
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Manufacturing\",\"Version\":\"0.1.0\"}}}"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Currency",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Description": "",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "Sno",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "currency",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test2",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test3",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test4",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Currency",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Currency",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"Description": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Project",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ProjectName",
										"Description": "The name of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectName"
										}
									},
									{
										"Name": "ProjectDescription",
										"Description": "The description of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectDescription"
										}
									},
									{
										"Name": "ProjectTypeId",
										"Description": "The unique identifier of a Project Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectTypeId"
										}
									},
									{
										"Name": "ProjectPlannedStartTimestamp",
										"Description": "The planned start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedStartTimestamp"
										}
									},
									{
										"Name": "ProjectPlannedEndTimestamp",
										"Description": "The planned end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedEndTimestamp"
										}
									},
									{
										"Name": "ProjectEarliestStartTimestamp",
										"Description": "The earliest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestStartTimestamp"
										}
									},
									{
										"Name": "ProjectEarliestEndTimestamp",
										"Description": "The earliest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestEndTimestamp"
										}
									},
									{
										"Name": "ProjectLatestStartTimestamp",
										"Description": "The latest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestStartTimestamp"
										}
									},
									{
										"Name": "ProjectLatestEndTimestamp",
										"Description": "The latest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestEndTimestamp"
										}
									},
									{
										"Name": "ProjectClosingTimestamp",
										"Description": "The closing timestamp of the project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectClosingTimestamp"
										}
									},
									{
										"Name": "ProjectRiskAssessmentStatement",
										"Description": "A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectRiskAssessmentStatement"
										}
									},
									{
										"Name": "ProjectWorkStatement",
										"Description": "A description of the scope of a project centered on the major deliverables and constraints.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectWorkStatement"
										}
									},
									{
										"Name": "ProjectCharterStatement",
										"Description": "A document that describes the project at a high level of detail and is used to authorize the project management to begin work.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectCharterStatement"
										}
									},
									{
										"Name": "BusinessCaseStatement",
										"Description": "The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "BusinessCaseStatement"
										}
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "LocationId"
										}
									},
									{
										"Name": "ProjectGlAccountNumber",
										"Description": "The GL Account Number assigned to a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectGlAccountNumber"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "ProjectNote",
										"Description": "A note, comment or additional information regarding the project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectNote"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Project",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Project",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"ProjectName\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"ProjectDescription\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"ProjectTypeId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"ProjectPlannedStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"ProjectPlannedEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"ProjectEarliestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"ProjectEarliestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"ProjectLatestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"ProjectLatestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"ProjectClosingTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"ProjectRiskAssessmentStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"ProjectWorkStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"ProjectCharterStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"BusinessCaseStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"LocationId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"ProjectGlAccountNumber\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"ResponsibilityCenterId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"ProjectNote\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Project\",\"path\":\"Project.cdm.json/Project\"},\"description\":\"A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.\",\"primaryKey\":[\"ProjectId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Project.\",\"isNullable\":true,\"name\":\"ProjectName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Project.\",\"isNullable\":true,\"name\":\"ProjectDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project Type.\",\"isNullable\":true,\"name\":\"ProjectTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The closing timestamp of the project.\",\"isNullable\":true,\"name\":\"ProjectClosingTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.\",\"isNullable\":true,\"name\":\"ProjectRiskAssessmentStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A description of the scope of a project centered on the major deliverables and constraints.\",\"isNullable\":true,\"name\":\"ProjectWorkStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A document that describes the project at a high level of detail and is used to authorize the project management to begin work.\",\"isNullable\":true,\"name\":\"ProjectCharterStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.\",\"isNullable\":true,\"name\":\"BusinessCaseStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The GL Account Number assigned to a Project.\",\"isNullable\":true,\"name\":\"ProjectGlAccountNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the project.\",\"isNullable\":true,\"name\":\"ProjectNote\"}]}}}",
								"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectActivity",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityId"
										}
									},
									{
										"Name": "ActivityName",
										"Description": "The name of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityName"
										}
									},
									{
										"Name": "ActivityDescription",
										"Description": "The description of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityDescription"
										}
									},
									{
										"Name": "ActivityPlannedStartTimestamp",
										"Description": "The planned start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedStartTimestamp"
										}
									},
									{
										"Name": "ActivityActualStartTimestamp",
										"Description": "The actual start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualStartTimestamp"
										}
									},
									{
										"Name": "ActivityPlannedEndTimestamp",
										"Description": "The planned end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedEndTimestamp"
										}
									},
									{
										"Name": "ActivityActualEndTimestamp",
										"Description": "The actual end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualEndTimestamp"
										}
									},
									{
										"Name": "Column_1",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/ProjectActivity",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/ProjectActivity",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"ActivityId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"ActivityName\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"ActivityDescription\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"ActivityPlannedStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"ActivityActualStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"ActivityPlannedEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"ActivityActualEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"name\":\"ProjectActivity\",\"description\":\"Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.\",\"baseEntityReference\":{\"name\":\"ProjectActivity\",\"path\":\"ProjectActivity.cdm.json/ProjectActivity\"},\"primaryKey\":[\"ProjectId\",\"ActivityId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of an Activity.\",\"isNullable\":true,\"name\":\"ActivityName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of an Activity.\",\"isNullable\":true,\"name\":\"ActivityDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"New\",\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"\",\"isNullable\":true,\"name\":\"Column_1\"}]}}}",
								"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ActivityId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-kufcaqpnec",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Project",
							"ToTableName": "ProjectActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Project.cdm.json/Project\",\"toEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		}
	]
}