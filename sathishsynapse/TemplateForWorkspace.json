{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "sathishsynapse"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"sathishsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sathishsynapse-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:sathishsynapse.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sathishstoragesftp.dfs.core.windows.net/"
		},
		"sathishsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sathishstoragesftp.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['firstName']"
										},
										"sink": {
											"name": "firstName"
										}
									},
									{
										"source": {
											"path": "$['lastName']"
										},
										"sink": {
											"name": "lastName"
										}
									},
									{
										"source": {
											"path": "$['gender']"
										},
										"sink": {
											"name": "gender"
										}
									},
									{
										"source": {
											"path": "$['age']"
										},
										"sink": {
											"name": "age"
										}
									},
									{
										"source": {
											"path": "$['address']['streetAddress']"
										},
										"sink": {
											"name": "streetAddress"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city"
										}
									},
									{
										"source": {
											"path": "$['address']['state']"
										},
										"sink": {
											"name": "state"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['number']"
										},
										"sink": {
											"name": "number"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Json2')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['firstName']"
										},
										"sink": {
											"name": "firstName"
										}
									},
									{
										"source": {
											"path": "$['lastName']"
										},
										"sink": {
											"name": "lastName"
										}
									},
									{
										"source": {
											"path": "$['gender']"
										},
										"sink": {
											"name": "gender"
										}
									},
									{
										"source": {
											"path": "$['age']"
										},
										"sink": {
											"name": "age"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['address']['streetAddress']"
										},
										"sink": {
											"name": "streetAddress"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city"
										}
									},
									{
										"source": {
											"path": "$['address']['state']"
										},
										"sink": {
											"name": "state"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['number']"
										},
										"sink": {
											"name": "number"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Json3')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 3')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sathishsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sathishsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sample2.json",
						"fileSystem": "inputfiles"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sample3.json",
						"fileSystem": "inputfiles"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"Date": {
							"type": "string"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "firstName",
						"type": "UTF8"
					},
					{
						"name": "lastName",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "age",
						"type": "INT64"
					},
					{
						"name": "streetAddress",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "number",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "firstName",
						"type": "UTF8"
					},
					{
						"name": "lastName",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "age",
						"type": "INT64"
					},
					{
						"name": "streetAddress",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "number",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLDEST')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "output"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Auhthor_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Edition",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblBooks"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sathishsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sathishsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sathishsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sathishsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Sno as string,",
						"          currency as string,",
						"          test as string,",
						"          test2 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'Database1',",
						"     tableName: 'Currency') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow2')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json3",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          firstName as string,",
						"          lastName as string,",
						"          gender as string,",
						"          age as integer,",
						"          Date as string,",
						"          address as (streetAddress as string, city as string, state as string),",
						"          phoneNumbers as (type as string, number as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments') ~> source1",
						"source1 derive(derviedTS = toTimestamp(toLong(substring(Date,1,13)))) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          firstName as string,",
						"          lastName as string,",
						"          gender as string,",
						"          age as long,",
						"          streetAddress as string,",
						"          city as string,",
						"          state as string,",
						"          type as string,",
						"          number as string",
						"     ),",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Json3')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow3')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDEST",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivot1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as integer,",
						"          Auhthor_id as integer,",
						"          Price as integer,",
						"          Edition as integer,",
						"          Year as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 pivot(groupBy(Year),",
						"     pivotBy(Auhthor_id),",
						"     Avg = sum(Price),",
						"     columnNaming: '$N$V',",
						"     lateral: false) ~> pivot1",
						"pivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Source')]",
				"[concat(variables('workspaceId'), '/datasets/SQLDEST')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Database1')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Database1",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true,
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Manufacturing\",\"Version\":\"0.1.0\"}}}"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Currency",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Description": "",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "Sno",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "currency",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test2",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test3",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "test4",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Currency",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Currency",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"Description": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Project",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ProjectName",
										"Description": "The name of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectName"
										}
									},
									{
										"Name": "ProjectDescription",
										"Description": "The description of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectDescription"
										}
									},
									{
										"Name": "ProjectTypeId",
										"Description": "The unique identifier of a Project Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectTypeId"
										}
									},
									{
										"Name": "ProjectPlannedStartTimestamp",
										"Description": "The planned start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedStartTimestamp"
										}
									},
									{
										"Name": "ProjectPlannedEndTimestamp",
										"Description": "The planned end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedEndTimestamp"
										}
									},
									{
										"Name": "ProjectEarliestStartTimestamp",
										"Description": "The earliest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestStartTimestamp"
										}
									},
									{
										"Name": "ProjectEarliestEndTimestamp",
										"Description": "The earliest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestEndTimestamp"
										}
									},
									{
										"Name": "ProjectLatestStartTimestamp",
										"Description": "The latest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestStartTimestamp"
										}
									},
									{
										"Name": "ProjectLatestEndTimestamp",
										"Description": "The latest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestEndTimestamp"
										}
									},
									{
										"Name": "ProjectClosingTimestamp",
										"Description": "The closing timestamp of the project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectClosingTimestamp"
										}
									},
									{
										"Name": "ProjectRiskAssessmentStatement",
										"Description": "A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectRiskAssessmentStatement"
										}
									},
									{
										"Name": "ProjectWorkStatement",
										"Description": "A description of the scope of a project centered on the major deliverables and constraints.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectWorkStatement"
										}
									},
									{
										"Name": "ProjectCharterStatement",
										"Description": "A document that describes the project at a high level of detail and is used to authorize the project management to begin work.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectCharterStatement"
										}
									},
									{
										"Name": "BusinessCaseStatement",
										"Description": "The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "BusinessCaseStatement"
										}
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "LocationId"
										}
									},
									{
										"Name": "ProjectGlAccountNumber",
										"Description": "The GL Account Number assigned to a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectGlAccountNumber"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "ProjectNote",
										"Description": "A note, comment or additional information regarding the project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectNote"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Project",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/Project",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"ProjectName\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"ProjectDescription\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"ProjectTypeId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"ProjectPlannedStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"ProjectPlannedEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"ProjectEarliestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"ProjectEarliestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"ProjectLatestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"ProjectLatestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"ProjectClosingTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"ProjectRiskAssessmentStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"ProjectWorkStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"ProjectCharterStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"BusinessCaseStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"LocationId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"ProjectGlAccountNumber\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"ResponsibilityCenterId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"ProjectNote\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Project\",\"path\":\"Project.cdm.json/Project\"},\"description\":\"A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.\",\"primaryKey\":[\"ProjectId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Project.\",\"isNullable\":true,\"name\":\"ProjectName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Project.\",\"isNullable\":true,\"name\":\"ProjectDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project Type.\",\"isNullable\":true,\"name\":\"ProjectTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The closing timestamp of the project.\",\"isNullable\":true,\"name\":\"ProjectClosingTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.\",\"isNullable\":true,\"name\":\"ProjectRiskAssessmentStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A description of the scope of a project centered on the major deliverables and constraints.\",\"isNullable\":true,\"name\":\"ProjectWorkStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A document that describes the project at a high level of detail and is used to authorize the project management to begin work.\",\"isNullable\":true,\"name\":\"ProjectCharterStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.\",\"isNullable\":true,\"name\":\"BusinessCaseStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The GL Account Number assigned to a Project.\",\"isNullable\":true,\"name\":\"ProjectGlAccountNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the project.\",\"isNullable\":true,\"name\":\"ProjectNote\"}]}}}",
								"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectActivity",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityId"
										}
									},
									{
										"Name": "ActivityName",
										"Description": "The name of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityName"
										}
									},
									{
										"Name": "ActivityDescription",
										"Description": "The description of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityDescription"
										}
									},
									{
										"Name": "ActivityPlannedStartTimestamp",
										"Description": "The planned start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedStartTimestamp"
										}
									},
									{
										"Name": "ActivityActualStartTimestamp",
										"Description": "The actual start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualStartTimestamp"
										}
									},
									{
										"Name": "ActivityPlannedEndTimestamp",
										"Description": "The planned end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedEndTimestamp"
										}
									},
									{
										"Name": "ActivityActualEndTimestamp",
										"Description": "The actual end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualEndTimestamp"
										}
									},
									{
										"Name": "Column_1",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/ProjectActivity",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database1/ProjectActivity",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"ActivityId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"ActivityName\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"ActivityDescription\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"ActivityPlannedStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"ActivityActualStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"ActivityPlannedEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"ActivityActualEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"name\":\"ProjectActivity\",\"description\":\"Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.\",\"baseEntityReference\":{\"name\":\"ProjectActivity\",\"path\":\"ProjectActivity.cdm.json/ProjectActivity\"},\"primaryKey\":[\"ProjectId\",\"ActivityId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of an Activity.\",\"isNullable\":true,\"name\":\"ActivityName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of an Activity.\",\"isNullable\":true,\"name\":\"ActivityDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"New\",\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"\",\"isNullable\":true,\"name\":\"Column_1\"}]}}}",
								"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ActivityId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-kufcaqpnec",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Project",
							"ToTableName": "ProjectActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Project.cdm.json/Project\",\"toEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Database2')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Database2",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true,
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Manufacturing\",\"Version\":\"0.1.0\"}}}"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Project",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectName",
										"Description": "The name of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectName"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectDescription",
										"Description": "The description of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectDescription"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectTypeId",
										"Description": "The unique identifier of a Project Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectTypeId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectPlannedStartTimestamp",
										"Description": "The planned start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedStartTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectPlannedEndTimestamp",
										"Description": "The planned end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedEndTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectEarliestStartTimestamp",
										"Description": "The earliest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestStartTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectEarliestEndTimestamp",
										"Description": "The earliest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestEndTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectLatestStartTimestamp",
										"Description": "The latest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestStartTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectLatestEndTimestamp",
										"Description": "The latest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestEndTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectClosingTimestamp",
										"Description": "The closing timestamp of the project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectClosingTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectRiskAssessmentStatement",
										"Description": "A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectRiskAssessmentStatement"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectWorkStatement",
										"Description": "A description of the scope of a project centered on the major deliverables and constraints.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectWorkStatement"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectCharterStatement",
										"Description": "A document that describes the project at a high level of detail and is used to authorize the project management to begin work.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectCharterStatement"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "BusinessCaseStatement",
										"Description": "The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "BusinessCaseStatement"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "LocationId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectGlAccountNumber",
										"Description": "The GL Account Number assigned to a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectGlAccountNumber"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ResponsibilityCenterId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectNote",
										"Description": "A note, comment or additional information regarding the project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectNote"
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/Project",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/Project",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"ProjectName\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"ProjectDescription\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"ProjectTypeId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"ProjectPlannedStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"ProjectPlannedEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"ProjectEarliestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"ProjectEarliestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"ProjectLatestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"ProjectLatestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"ProjectClosingTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"ProjectRiskAssessmentStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"ProjectWorkStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"ProjectCharterStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"BusinessCaseStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"LocationId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"ProjectGlAccountNumber\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"ResponsibilityCenterId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"ProjectNote\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Project\",\"path\":\"Project.cdm.json/Project\"},\"description\":\"A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.\",\"primaryKey\":[\"ProjectId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Project.\",\"isNullable\":true,\"name\":\"ProjectName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Project.\",\"isNullable\":true,\"name\":\"ProjectDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project Type.\",\"isNullable\":true,\"name\":\"ProjectTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The closing timestamp of the project.\",\"isNullable\":true,\"name\":\"ProjectClosingTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.\",\"isNullable\":true,\"name\":\"ProjectRiskAssessmentStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A description of the scope of a project centered on the major deliverables and constraints.\",\"isNullable\":true,\"name\":\"ProjectWorkStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A document that describes the project at a high level of detail and is used to authorize the project management to begin work.\",\"isNullable\":true,\"name\":\"ProjectCharterStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.\",\"isNullable\":true,\"name\":\"BusinessCaseStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The GL Account Number assigned to a Project.\",\"isNullable\":true,\"name\":\"ProjectGlAccountNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the project.\",\"isNullable\":true,\"name\":\"ProjectNote\"}]}}}",
								"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectActivity",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ProjectId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityName",
										"Description": "The name of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityName"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityDescription",
										"Description": "The description of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityDescription"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityPlannedStartTimestamp",
										"Description": "The planned start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedStartTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityActualStartTimestamp",
										"Description": "The actual start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualStartTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityPlannedEndTimestamp",
										"Description": "The planned end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedEndTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityActualEndTimestamp",
										"Description": "The actual end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualEndTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/ProjectActivity",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/ProjectActivity",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"ActivityId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"ActivityName\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"ActivityDescription\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"ActivityPlannedStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"ActivityActualStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"ActivityPlannedEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"ActivityActualEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProjectActivity\",\"path\":\"ProjectActivity.cdm.json/ProjectActivity\"},\"description\":\"Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.\",\"primaryKey\":[\"ProjectId\",\"ActivityId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of an Activity.\",\"isNullable\":true,\"name\":\"ActivityName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of an Activity.\",\"isNullable\":true,\"name\":\"ActivityDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"}]}}}",
								"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ActivityId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectActivityTask",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Description": "The task(s) consolidated by or grouped by the Activity.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ProjectId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ActivityId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "TaskId",
										"Description": "The unique identifier of a Task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "TaskId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityTaskSequenceNumber",
										"Description": "The task execution sequence in the Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ActivityTaskSequenceNumber"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityTaskNote",
										"Description": "A note, comment or additional information regarding the activity task.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ActivityTaskNote"
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/ProjectActivityTask",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/ProjectActivityTask",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ProjectId\"},\"ActivityId\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityId\"},\"TaskId\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"TaskId\"},\"ActivityTaskSequenceNumber\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskSequenceNumber\"},\"ActivityTaskNote\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProjectActivityTask\",\"path\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\"},\"description\":\"The task(s) consolidated by or grouped by the Activity.\",\"primaryKey\":[\"ProjectId\",\"ActivityId\",\"TaskId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"TaskId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Task.\",\"isNullable\":false,\"name\":\"TaskId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskSequenceNumber\"},\"dataType\":\"integer\",\"description\":\"The task execution sequence in the Activity.\",\"isNullable\":true,\"name\":\"ActivityTaskSequenceNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the activity task.\",\"isNullable\":true,\"name\":\"ActivityTaskNote\"}]}}}",
								"Description": "The task(s) consolidated by or grouped by the Activity.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ActivityId,TaskId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectAuthorization",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Description": "The authorization(s) required to perform the associated Project.\n\nEx:\n- customer\n- company management\n- project manager\n- city\n- county\n- planning commission\n- clerical",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectAuthorization.cdm.json/ProjectAuthorization",
											"Name": "ProjectId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "AuthorizationLevelId",
										"Description": "The unique identifier of an Authorization Level.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectAuthorization.cdm.json/ProjectAuthorization",
											"Name": "AuthorizationLevelId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectAuthorizationStatusTimestamp",
										"Description": "The date/time when the authorization status was effective for the authorization level.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectAuthorization.cdm.json/ProjectAuthorization",
											"Name": "ProjectAuthorizationStatusTimestamp"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "AuthorizationStatusId",
										"Description": "The unique identifier of an Authorization Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectAuthorization.cdm.json/ProjectAuthorization",
											"Name": "AuthorizationStatusId"
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProjectAuthorizationNote",
										"Description": "A note, comment or additional information regarding the Project Authorization.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectAuthorization.cdm.json/ProjectAuthorization",
											"Name": "ProjectAuthorizationNote"
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/ProjectAuthorization",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database2/ProjectAuthorization",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"ProjectId\"},\"AuthorizationLevelId\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"AuthorizationLevelId\"},\"ProjectAuthorizationStatusTimestamp\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"ProjectAuthorizationStatusTimestamp\"},\"AuthorizationStatusId\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"AuthorizationStatusId\"},\"ProjectAuthorizationNote\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"ProjectAuthorizationNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProjectAuthorization\",\"path\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\"},\"description\":\"The authorization(s) required to perform the associated Project.\\n\\nEx:\\n- customer\\n- company management\\n- project manager\\n- city\\n- county\\n- planning commission\\n- clerical\",\"primaryKey\":[\"ProjectId\",\"AuthorizationLevelId\",\"ProjectAuthorizationStatusTimestamp\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"AuthorizationLevelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Authorization Level.\",\"isNullable\":false,\"name\":\"AuthorizationLevelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"ProjectAuthorizationStatusTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The date/time when the authorization status was effective for the authorization level.\",\"isNullable\":false,\"name\":\"ProjectAuthorizationStatusTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"AuthorizationStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Authorization Status.\",\"isNullable\":true,\"name\":\"AuthorizationStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"name\":\"ProjectAuthorizationNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Project Authorization.\",\"isNullable\":true,\"name\":\"ProjectAuthorizationNote\"}]}}}",
								"Description": "The authorization(s) required to perform the associated Project.\n\nEx:\n- customer\n- company management\n- project manager\n- city\n- county\n- planning commission\n- clerical",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,AuthorizationLevelId,ProjectAuthorizationStatusTimestamp",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-evvmxbjbzd",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectActivity",
							"ToTableName": "ProjectActivityTask",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ActivityId",
									"ToColumnName": "ActivityId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"toEntity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"joinPairs\":[{\"fromAttribute\":\"ActivityId\",\"toAttribute\":\"ActivityId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-kxdnwlunnc",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectActivity",
							"ToTableName": "ProjectActivityTask",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"toEntity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-pvaolmvvtb",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Project",
							"ToTableName": "ProjectAuthorization",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Project.cdm.json/Project\",\"toEntity\":\"ProjectAuthorization.cdm.json/ProjectAuthorization\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-ubphlmzdji",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Database2"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Project",
							"ToTableName": "ProjectActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Project.cdm.json/Project\",\"toEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Database3')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Database3",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database3",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Table_1",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database3"
							},
							"Description": "",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "Column_1",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database3/Table_1",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database3/Table_1",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"Description": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Database4')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Database4",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true,
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Banking\",\"Version\":\"0.1.0\"}}}"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "BenefitCriteriaType",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database4"
							},
							"Description": "Benefit Criteria Type is a means of classifying, grouping or categorizing specific Benefit Criteria at a higher level for analysis and presentation.\n\nThe Benefit Criteria is the specific variable or value that may be linked to a Market Segment.\n\nThe Benefit Type is the larger category to which the Benefit Criteria belongs.\n\nThe following are examples:\n\nBenefit Criteria:  Long Term Appreciation\nBenefit Type:  Investment Objective\n\nBenefit Criteria:  Retirement Savings\nBenefit Type:  Investment Objective",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "BenefitCriteriaTypeId",
										"Description": "The unique identifier of a Benefit Criteria Type.",
										"BaseAttributeReference": {
											"Entity": "BenefitCriteriaType.cdm.json/BenefitCriteriaType",
											"Name": "BenefitCriteriaTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "BenefitCriteriaTypeName",
										"Description": "The name of the Benefit Criteria Type.",
										"BaseAttributeReference": {
											"Entity": "BenefitCriteriaType.cdm.json/BenefitCriteriaType",
											"Name": "BenefitCriteriaTypeName"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "BenefitCriteriaTypeDescription",
										"Description": "The description of the Benefit Criteria Type.",
										"BaseAttributeReference": {
											"Entity": "BenefitCriteriaType.cdm.json/BenefitCriteriaType",
											"Name": "BenefitCriteriaTypeDescription"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/BenefitCriteriaType",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/BenefitCriteriaType",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"BenefitCriteriaTypeId\":{\"entity\":\"BenefitCriteriaType.cdm.json/BenefitCriteriaType\",\"name\":\"BenefitCriteriaTypeId\"},\"BenefitCriteriaTypeName\":{\"entity\":\"BenefitCriteriaType.cdm.json/BenefitCriteriaType\",\"name\":\"BenefitCriteriaTypeName\"},\"BenefitCriteriaTypeDescription\":{\"entity\":\"BenefitCriteriaType.cdm.json/BenefitCriteriaType\",\"name\":\"BenefitCriteriaTypeDescription\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"BenefitCriteriaType\",\"path\":\"BenefitCriteriaType.cdm.json/BenefitCriteriaType\"},\"description\":\"Benefit Criteria Type is a means of classifying, grouping or categorizing specific Benefit Criteria at a higher level for analysis and presentation.\\n\\nThe Benefit Criteria is the specific variable or value that may be linked to a Market Segment.\\n\\nThe Benefit Type is the larger category to which the Benefit Criteria belongs.\\n\\nThe following are examples:\\n\\nBenefit Criteria:  Long Term Appreciation\\nBenefit Type:  Investment Objective\\n\\nBenefit Criteria:  Retirement Savings\\nBenefit Type:  Investment Objective\",\"primaryKey\":[\"BenefitCriteriaTypeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"BenefitCriteriaType.cdm.json/BenefitCriteriaType\",\"name\":\"BenefitCriteriaTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Benefit Criteria Type.\",\"isNullable\":false,\"name\":\"BenefitCriteriaTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"BenefitCriteriaType.cdm.json/BenefitCriteriaType\",\"name\":\"BenefitCriteriaTypeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Benefit Criteria Type.\",\"isNullable\":true,\"name\":\"BenefitCriteriaTypeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"BenefitCriteriaType.cdm.json/BenefitCriteriaType\",\"name\":\"BenefitCriteriaTypeDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the Benefit Criteria Type.\",\"isNullable\":true,\"name\":\"BenefitCriteriaTypeDescription\"}]}}}",
								"Description": "Benefit Criteria Type is a means of classifying, grouping or categorizing specific Benefit Criteria at a higher level for analysis and presentation.\n\nThe Benefit Criteria is the specific variable or value that may be linked to a Market Segment.\n\nThe Benefit Type is the larger category to which the Benefit Criteria belongs.\n\nThe following are examples:\n\nBenefit Criteria:  Long Term Appreciation\nBenefit Type:  Investment Objective\n\nBenefit Criteria:  Retirement Savings\nBenefit Type:  Investment Objective",
								"DisplayFolderInfo": "{\"name\":\"Customer\",\"colorCode\":\"#4B003F\"}",
								"PrimaryKeys": "BenefitCriteriaTypeId",
								"spark.sql.sources.provider": "csv",
								"sql:IsAppendOnly": false
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Customer",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database4"
							},
							"Description": "A customer is an individual or legal entity that has or has purchased a product or service.\n\nA potential customer is an individual or legal entity that has the desire to acquire a product or service, the financial ability to pay for that product or service and is located in a location in which the product or service can be delivered to them.\n\nThe definition of 'customer' is of critical importance for every organization.    \n\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\n\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  An artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\n\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings and legal entities.     \n\nHuman beings are obviously male and female individuals of various ages, sex, demographics and a variety of similar dimensions that describe and define them who purchase products, good and services.    \n\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\n\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\n\nOf course, that is just the start of identifying, defining and understanding each type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.\n\nMicrosoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\n\n-  INDIVIDUAL CUSTOMER Business Area Model\n-  LEGAL ENTITY CUSTOMER Business Area Model\n\nNote:\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\n\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \n\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \n\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \n\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\n\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CustomerEstablishedDate",
										"Description": "The date that the Customer relationship was established.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerEstablishedDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CustomerTypeId",
										"Description": "The unique identifier of a Customer Type.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "ResponsibilityCenterId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "LedgerId",
										"Description": "The unique identifier of a Ledger.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "LedgerId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "LedgerAccountNumber",
										"Description": "The unique identifier of a Ledger Account.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "LedgerAccountNumber"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CustomerNote",
										"Description": "A note, comment or additional information regarding the Customer.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "PartyId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "GlobalLocationNumber",
										"Description": "The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.",
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "GlobalLocationNumber"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/Customer",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/Customer",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"CustomerId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerId\"},\"CustomerEstablishedDate\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerEstablishedDate\"},\"CustomerTypeId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerTypeId\"},\"ResponsibilityCenterId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"ResponsibilityCenterId\"},\"LedgerId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerId\"},\"LedgerAccountNumber\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerAccountNumber\"},\"CustomerNote\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerNote\"},\"PartyId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"PartyId\"},\"GlobalLocationNumber\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"GlobalLocationNumber\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Customer\",\"path\":\"Customer.cdm.json/Customer\"},\"description\":\"A customer is an individual or legal entity that has or has purchased a product or service.\\n\\nA potential customer is an individual or legal entity that has the desire to acquire a product or service, the financial ability to pay for that product or service and is located in a location in which the product or service can be delivered to them.\\n\\nThe definition of 'customer' is of critical importance for every organization.    \\n\\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\\n\\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  An artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\\n\\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings and legal entities.     \\n\\nHuman beings are obviously male and female individuals of various ages, sex, demographics and a variety of similar dimensions that describe and define them who purchase products, good and services.    \\n\\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\\n\\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\\n\\nOf course, that is just the start of identifying, defining and understanding each type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.\\n\\nMicrosoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\\n\\n-  INDIVIDUAL CUSTOMER Business Area Model\\n-  LEGAL ENTITY CUSTOMER Business Area Model\\n\\nNote:\\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\\n\\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \\n\\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \\n\\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \\n\\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\\n\\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.\",\"primaryKey\":[\"CustomerId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":false,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerEstablishedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Customer relationship was established.\",\"isNullable\":true,\"name\":\"CustomerEstablishedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Customer Type.\",\"isNullable\":true,\"name\":\"CustomerTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Ledger.\",\"isNullable\":true,\"name\":\"LedgerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The unique identifier of a Ledger Account.\",\"isNullable\":true,\"name\":\"LedgerAccountNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Customer.\",\"isNullable\":true,\"name\":\"CustomerNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"GlobalLocationNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalLocationNumber\"}]}}}",
								"Description": "A customer is an individual or legal entity that has or has purchased a product or service.\n\nA potential customer is an individual or legal entity that has the desire to acquire a product or service, the financial ability to pay for that product or service and is located in a location in which the product or service can be delivered to them.\n\nThe definition of 'customer' is of critical importance for every organization.    \n\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\n\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  An artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\n\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings and legal entities.     \n\nHuman beings are obviously male and female individuals of various ages, sex, demographics and a variety of similar dimensions that describe and define them who purchase products, good and services.    \n\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\n\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\n\nOf course, that is just the start of identifying, defining and understanding each type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.\n\nMicrosoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\n\n-  INDIVIDUAL CUSTOMER Business Area Model\n-  LEGAL ENTITY CUSTOMER Business Area Model\n\nNote:\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\n\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \n\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \n\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \n\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\n\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.",
								"DisplayFolderInfo": "{\"name\":\"Customer\",\"colorCode\":\"#4B003F\"}",
								"PrimaryKeys": "CustomerId",
								"spark.sql.sources.provider": "csv",
								"sql:IsAppendOnly": false
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "CustomerActivity",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database4"
							},
							"Description": "The Activity(s) that a specific Individual Customer has acknowledged was identified or recorded as of the indicated date.\n\nActivities, Interests and Opinions are the foundation of Psychographics and Psychographic Segmentation.     Activities, Interests and Opinions equate to 'lifestyle'.    Activities, Interests and Opinions (AIO) are the basis for understanding consumer buying behavior as a function of their lifestyle.\n\nActivities describe what a consumer 'does', such as occupation, hobbies, entertainment.\n\nEach organization will identify, define and track a specific set of AIO's to gather information about, define consumers and make decisions. \n\nExamples:\n\nActivity =  \"Cooking\"\nActivity Type = \"Personal Interest\"\n\nActivity =  \"Golf\"\nActivity Type = \"Personal Sports\n\nActivity =  \"Mutual Fund Investing\"\nActivity Type = \"Finance\"\n\nSales, marketing and advertising activities are often planned for or targeted at groups involved in or interested in specific activities.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"BaseAttributeReference": {
											"Entity": "CustomerActivity.cdm.json/CustomerActivity",
											"Name": "CustomerId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"BaseAttributeReference": {
											"Entity": "CustomerActivity.cdm.json/CustomerActivity",
											"Name": "ActivityId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Date",
										"Description": "The timestamp that the associated information is reported, recorded or effective as-of.",
										"BaseAttributeReference": {
											"Entity": "CustomerActivity.cdm.json/CustomerActivity",
											"Name": "Date"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "AioLevelId",
										"Description": "The unique identifier of an AIO Level.",
										"BaseAttributeReference": {
											"Entity": "CustomerActivity.cdm.json/CustomerActivity",
											"Name": "AioLevelId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CustomerActivityNote",
										"Description": "A note, comment or additional information related to the Activity in which the Customer participates.",
										"BaseAttributeReference": {
											"Entity": "CustomerActivity.cdm.json/CustomerActivity",
											"Name": "CustomerActivityNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/CustomerActivity",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/CustomerActivity",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"CustomerId\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"CustomerId\"},\"ActivityId\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"ActivityId\"},\"Date\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"Date\"},\"AioLevelId\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"AioLevelId\"},\"CustomerActivityNote\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"CustomerActivityNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"CustomerActivity\",\"path\":\"CustomerActivity.cdm.json/CustomerActivity\"},\"description\":\"The Activity(s) that a specific Individual Customer has acknowledged was identified or recorded as of the indicated date.\\n\\nActivities, Interests and Opinions are the foundation of Psychographics and Psychographic Segmentation.     Activities, Interests and Opinions equate to 'lifestyle'.    Activities, Interests and Opinions (AIO) are the basis for understanding consumer buying behavior as a function of their lifestyle.\\n\\nActivities describe what a consumer 'does', such as occupation, hobbies, entertainment.\\n\\nEach organization will identify, define and track a specific set of AIO's to gather information about, define consumers and make decisions. \\n\\nExamples:\\n\\nActivity =  \\\"Cooking\\\"\\nActivity Type = \\\"Personal Interest\\\"\\n\\nActivity =  \\\"Golf\\\"\\nActivity Type = \\\"Personal Sports\\n\\nActivity =  \\\"Mutual Fund Investing\\\"\\nActivity Type = \\\"Finance\\\"\\n\\nSales, marketing and advertising activities are often planned for or targeted at groups involved in or interested in specific activities.\",\"primaryKey\":[\"CustomerId\",\"ActivityId\",\"Date\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":false,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"Date\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The timestamp that the associated information is reported, recorded or effective as-of.\",\"isNullable\":false,\"name\":\"Date\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"AioLevelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an AIO Level.\",\"isNullable\":true,\"name\":\"AioLevelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerActivity.cdm.json/CustomerActivity\",\"name\":\"CustomerActivityNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information related to the Activity in which the Customer participates.\",\"isNullable\":true,\"name\":\"CustomerActivityNote\"}]}}}",
								"Description": "The Activity(s) that a specific Individual Customer has acknowledged was identified or recorded as of the indicated date.\n\nActivities, Interests and Opinions are the foundation of Psychographics and Psychographic Segmentation.     Activities, Interests and Opinions equate to 'lifestyle'.    Activities, Interests and Opinions (AIO) are the basis for understanding consumer buying behavior as a function of their lifestyle.\n\nActivities describe what a consumer 'does', such as occupation, hobbies, entertainment.\n\nEach organization will identify, define and track a specific set of AIO's to gather information about, define consumers and make decisions. \n\nExamples:\n\nActivity =  \"Cooking\"\nActivity Type = \"Personal Interest\"\n\nActivity =  \"Golf\"\nActivity Type = \"Personal Sports\n\nActivity =  \"Mutual Fund Investing\"\nActivity Type = \"Finance\"\n\nSales, marketing and advertising activities are often planned for or targeted at groups involved in or interested in specific activities.",
								"DisplayFolderInfo": "{\"name\":\"Customer\",\"colorCode\":\"#4B003F\"}",
								"PrimaryKeys": "CustomerId,ActivityId,Date",
								"spark.sql.sources.provider": "csv",
								"sql:IsAppendOnly": false
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "CustomerAncestry",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database4"
							},
							"Description": "The ancestry(s) identified by or for the Customer.\n\nOne or more ethnic identifies that may be identified by the Customer.\n\nSource:  US Bureau of Census\nThis identification is based on self-identification; the data on ancestry represents self-classification by people according to the ancestry group(s) with which they most closely identify. Ancestry refers to a person's ethnic origin or descent, \"roots,\" or heritage or the place of birth of the person or the person's parents or ancestors before their arrival in the United States. Some ethnic identities, such as \"Egyptian\" or \"Polish\" can be traced to geographic areas outside the United States, while other ethnicities such as \"Pennsylvania Dutch\" or \"Cajun\" evolved in the United States. \n\nThe ancestry question allowed respondents to report one or more ancestry groups. While a large number of respondents listed a single ancestry, the majority of answers included more than one ethnic entry.\n\nThe Census Bureau accepts \"American\" as a unique ethnicity if it was given alone, with an ambiguous response, or with State names. If the respondent listed any other ethnic identity such as \"Italian American,\" generally the \"American\" portion of the response\nwas not coded. However, distinct groups such as \"American Indian,\" \"Mexican American,\" and \"African American\" were coded and identified separately because they represented groups who considered themselves different from those who reported as\n\"Indian,\" \"Mexican,\" or \"African,\" respectively.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"BaseAttributeReference": {
											"Entity": "CustomerAncestry.cdm.json/CustomerAncestry",
											"Name": "CustomerId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "AncestryId",
										"Description": "The unique identifier of an Ancestry.",
										"BaseAttributeReference": {
											"Entity": "CustomerAncestry.cdm.json/CustomerAncestry",
											"Name": "AncestryId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CustomerAncestryNote",
										"Description": "Notes, comments or additional information regarding the Customer's ancestry.",
										"BaseAttributeReference": {
											"Entity": "CustomerAncestry.cdm.json/CustomerAncestry",
											"Name": "CustomerAncestryNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/CustomerAncestry",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://synapsefolder@sathishstoragesftp.dfs.core.windows.net/Database4/CustomerAncestry",
									"Properties": {
										"LinkedServiceName": "sathishsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"CustomerId\":{\"entity\":\"CustomerAncestry.cdm.json/CustomerAncestry\",\"name\":\"CustomerId\"},\"AncestryId\":{\"entity\":\"CustomerAncestry.cdm.json/CustomerAncestry\",\"name\":\"AncestryId\"},\"CustomerAncestryNote\":{\"entity\":\"CustomerAncestry.cdm.json/CustomerAncestry\",\"name\":\"CustomerAncestryNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"CustomerAncestry\",\"path\":\"CustomerAncestry.cdm.json/CustomerAncestry\"},\"description\":\"The ancestry(s) identified by or for the Customer.\\n\\nOne or more ethnic identifies that may be identified by the Customer.\\n\\nSource:  US Bureau of Census\\nThis identification is based on self-identification; the data on ancestry represents self-classification by people according to the ancestry group(s) with which they most closely identify. Ancestry refers to a person's ethnic origin or descent, \\\"roots,\\\" or heritage or the place of birth of the person or the person's parents or ancestors before their arrival in the United States. Some ethnic identities, such as \\\"Egyptian\\\" or \\\"Polish\\\" can be traced to geographic areas outside the United States, while other ethnicities such as \\\"Pennsylvania Dutch\\\" or \\\"Cajun\\\" evolved in the United States. \\n\\nThe ancestry question allowed respondents to report one or more ancestry groups. While a large number of respondents listed a single ancestry, the majority of answers included more than one ethnic entry.\\n\\nThe Census Bureau accepts \\\"American\\\" as a unique ethnicity if it was given alone, with an ambiguous response, or with State names. If the respondent listed any other ethnic identity such as \\\"Italian American,\\\" generally the \\\"American\\\" portion of the response\\nwas not coded. However, distinct groups such as \\\"American Indian,\\\" \\\"Mexican American,\\\" and \\\"African American\\\" were coded and identified separately because they represented groups who considered themselves different from those who reported as\\n\\\"Indian,\\\" \\\"Mexican,\\\" or \\\"African,\\\" respectively.\",\"primaryKey\":[\"CustomerId\",\"AncestryId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerAncestry.cdm.json/CustomerAncestry\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":false,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerAncestry.cdm.json/CustomerAncestry\",\"name\":\"AncestryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Ancestry.\",\"isNullable\":false,\"name\":\"AncestryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"CustomerAncestry.cdm.json/CustomerAncestry\",\"name\":\"CustomerAncestryNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"Notes, comments or additional information regarding the Customer's ancestry.\",\"isNullable\":true,\"name\":\"CustomerAncestryNote\"}]}}}",
								"Description": "The ancestry(s) identified by or for the Customer.\n\nOne or more ethnic identifies that may be identified by the Customer.\n\nSource:  US Bureau of Census\nThis identification is based on self-identification; the data on ancestry represents self-classification by people according to the ancestry group(s) with which they most closely identify. Ancestry refers to a person's ethnic origin or descent, \"roots,\" or heritage or the place of birth of the person or the person's parents or ancestors before their arrival in the United States. Some ethnic identities, such as \"Egyptian\" or \"Polish\" can be traced to geographic areas outside the United States, while other ethnicities such as \"Pennsylvania Dutch\" or \"Cajun\" evolved in the United States. \n\nThe ancestry question allowed respondents to report one or more ancestry groups. While a large number of respondents listed a single ancestry, the majority of answers included more than one ethnic entry.\n\nThe Census Bureau accepts \"American\" as a unique ethnicity if it was given alone, with an ambiguous response, or with State names. If the respondent listed any other ethnic identity such as \"Italian American,\" generally the \"American\" portion of the response\nwas not coded. However, distinct groups such as \"American Indian,\" \"Mexican American,\" and \"African American\" were coded and identified separately because they represented groups who considered themselves different from those who reported as\n\"Indian,\" \"Mexican,\" or \"African,\" respectively.",
								"DisplayFolderInfo": "{\"name\":\"Customer\",\"colorCode\":\"#4B003F\"}",
								"PrimaryKeys": "CustomerId,AncestryId",
								"spark.sql.sources.provider": "csv",
								"sql:IsAppendOnly": false
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		}
	]
}